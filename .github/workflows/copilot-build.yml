name: copilot-build

on:
  workflow_call:
    outputs:
      artifact:
        description: "The name of the uploaded artifact."
        value: ${{jobs.web-api.outputs.artifact}}

permissions:
  contents: read

jobs:
  web-api:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { dotnet: "6.0", configuration: Release, os: ubuntu-latest }

    runs-on: ${{ matrix.os }}

    env:
      NUGET_CERT_REVOCATION_MODE: offline

    outputs:
      artifact: ${{steps.artifactoutput.outputs.artifactname}}

    steps:
      - uses: actions/checkout@v3
        with:
          clean: true

      - name: Pull container dotnet/sdk:${{ matrix.dotnet }}
        run: docker pull mcr.microsoft.com/dotnet/sdk:${{ matrix.dotnet }}

      - name: Package Copilot Chat WebAPI
        run: |
          sudo apt update && sudo apt -y install dotnet6
          chmod +x $(pwd)/samples/apps/copilot-chat-app/deploy/package-webapi.sh;
          samples/apps/copilot-chat-app/deploy/package-webapi.sh --configuration Release --runtime win-x64 --output ${{ github.workspace }}/samples/apps/copilot-chat-app/deploy

      - name: Set version tag
        id: versiontag
        run: |
          VERSION_TAG="$(date +'%Y%m%d').${{ github.run_number }}.${{ github.run_attempt }}"
          echo $VERSION_TAG
          echo "versiontag=$VERSION_TAG" >> $GITHUB_OUTPUT

      - name: Upload package to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: copilotchat-webapi-${{ steps.versiontag.outputs.versiontag }}
          path: ${{ github.workspace }}/samples/apps/copilot-chat-app/deploy/out/webapi.zip

      - name: "Set outputs"
        id: artifactoutput
        run: echo "artifactname=copilotchat-webapi-${{ steps.versiontag.outputs.versiontag }}" >> $GITHUB_OUTPUT
